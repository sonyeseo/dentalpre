{"version":3,"sources":["../../stdin","own/_mixin.scss","own/_variables.scss","../../node_modules/compass-importer/.compass/compass-mixins-master/lib/compass/css3/_transition.scss","../../node_modules/compass-importer/.compass/compass-mixins-master/lib/compass/css3/_shared.scss"],"names":[],"mappings":"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","file":"vendors/timeline.css","sourcesContent":["@import '../own/variables';\n@import '../own/mixin';\n@import \"compass/css3\";\n\nhtml * {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.cd-timeline {\n  position: relative;\n  width: 90%;\n  margin: 0 auto;\n  @include clearfix;\n\n  @include media('lg') {\n    width: 100%;\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 50%;\n    margin: -20px 0 0 -35px;\n    height: 100%;\n    width: 70px;\n    background: $brand-default;\n    border-left: 35px solid $brand-primary;\n    border-right: 34px solid $brand-primary;\n    border-radius: 0 0 34px 35px;\n\n    @include media('md') {\n      left: 0;\n      margin-left: 0;\n    }\n  }\n\n  &-img {\n\n    &:before {\n      content: '';\n      z-index: 2;\n      position: absolute;\n      top: $grid-padding*2;\n      left: 50%;\n      width: 51px;\n      height: 51px;\n      margin: -10px 0 0 -25px;\n      border-radius: 50%;\n\n      @include media('md') {\n        left: 0;\n        margin-left: 8px;\n      }\n    }\n\n    &.img-default:before {\n      background: $brand-default;\n    }\n\n    &.img-warning:before {\n      background: $brand-warning;\n    }\n\n    &.img-success:before {\n      background: $brand-success;\n    }\n\n    &.img-info:before {\n      background: $brand-info;\n    }\n  }\n\n  &-block {\n    position: relative;\n    margin: 0 0 $grid-padding;\n    padding: $grid-padding*2 0 0;\n    overflow: hidden;\n    @include clearfix;\n    @include t(transform);\n    @include transition(all, .5s);\n    @include media('md') {\n      padding-left: 80px;\n    }\n\n    .cd-timeline-date , .cd-timeline-content {\n      width: 45%;\n\n\n      @include media('md') {\n        width: 100%;\n        float: none !important;\n        text-align: left !important;\n      }\n    }\n\n    &:nth-child(odd) {\n\n      .cd-timeline-date {\n        float: left;\n        text-align: right;\n      }\n\n      .cd-timeline-content {\n        float: right;\n      }\n\n      &.is-hidden {\n        @include transform(translateY(-20%));\n        opacity: 0;\n        visibility: hidden;\n      }\n\n      &.bounce-in {\n        @include transform(translateY(0));\n        opacity: 1;\n        visibility: visible;\n      }\n    }\n\n    &:nth-child(even) {\n\n      .cd-timeline-date {\n        float: right;\n      }\n\n      .cd-timeline-content {\n        float: left;\n        text-align: right;\n      }\n\n      &.is-hidden {\n        @include transform(translateY(-20%));\n        opacity: 0;\n        visibility: hidden;\n      }\n\n      &.bounce-in {\n        @include transform(translateY(0));\n        opacity: 1;\n        visibility: visible;\n      }\n    }\n\n    .cd-timeline-date {\n\n      .date {\n        display: inline-block;\n        padding: 0 0 0 30px;\n        background: url('../../img/icon-37.png') no-repeat 0 50%;\n         margin-top: 5px;\n      }\n    }\n\n    h2 {\n      color: $text-dark;\n      font-size: 20px;\n      line-height: 36px;\n      font-weight: 700;\n    }\n\n    p {\n      font-size: 16px;\n      line-height: 24px;\n    }\n\n    .scope {\n      font-size: 16px;\n      line-height: 24px;\n      display: inline-block;\n      padding: 0 8px 0 30px;\n\n      &.likes {\n        background: url('../../img/icon-38.png') no-repeat 0 50%;\n        cursor: pointer;\n        &.active{\n          background: url('../../img/icon-38-active.png') no-repeat 0 50%;\n        }\n      }\n\n      &.comments {\n        background: url('../../img/icon-39.png') no-repeat 0 50%;\n        cursor: pointer;\n      }\n    }\n  }\n}\n","@mixin clearfix() {\n  &:after{\n    content: '';\n    display: table;\n    clear: both;\n  }\n}\n\n@mixin decor($background) {\n  background-color: $background;\n}\n\n@mixin text($color) {\n  color: $color;\n}\n\n@mixin no-wrap() {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n@mixin shadow() {\n  box-shadow: 0 1px 4px $brand-default-hue;\n}\n\n@mixin text-overflow() {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n@mixin mix-default() {\n  background-color: $brand-default;\n    border: 1px solid $brand-default-hue !important;\n  color: $text-dark;\n    line-height: 32px;\n\n  &:hover, &.hovered {\n    background-color: $brand-default-hue;\n  }\n\n  &:active, &.active {\n    background-color: $brand-default;\n    box-shadow: inset 0 4px 1px $brand-default-hue;\n  }\n\n  &[disabled]:hover {\n    background-color: $brand-default;\n  }\n}\n\n@mixin mix-primary() {\n  background-color: $brand-primary;\n\n  &:hover, &.hovered {\n    background-color: $brand-primary-hue;\n  }\n\n  &:active, &.active {\n    background-color: $brand-primary;\n    box-shadow: inset 0 4px 1px $brand-primary-hue;\n  }\n\n  &[disabled]:hover {\n    background-color: $brand-primary;\n  }\n}\n\n@mixin mix-success() {\n  background-color: $brand-success;\n\n  &:hover, &.hovered {\n    background-color: $brand-success-hue;\n  }\n\n  &:active, &.active {\n    background-color: $brand-success;\n    box-shadow: inset 0 4px 1px $brand-success-hue;\n  }\n\n  &[disabled]:hover {\n    background-color: $brand-success;\n  }\n}\n\n@mixin mix-info() {\n  background-color: $brand-info;\n\n  &:hover, &.hovered {\n    background-color: $brand-info-hue;\n  }\n\n  &:active, &.active {\n    background-color: $brand-info-hue;\n    box-shadow: inset 0 4px 1px darken($brand-info-hue, 20%);\n  }\n\n  &[disabled]:hover {\n    background-color: $brand-info;\n  }\n}\n\n@mixin mix-warning() {\n  background-color: $brand-warning;\n\n  &:hover, &.hovered {\n    background-color: $brand-warning-hue;\n  }\n\n  &:active, &.active {\n    background-color: $brand-warning;\n    box-shadow: inset 0 4px 1px $brand-warning-hue;\n  }\n\n  &[disabled]:hover {\n    background-color: $brand-warning;\n  }\n}\n\n@mixin mix-danger() {\n  background-color: $brand-danger;\n\n  &:hover, &.hovered {\n    background-color: $brand-danger-hue;\n    color: $text-light;\n  }\n\n  &:active, &.active {\n    background-color: $brand-danger;\n    box-shadow: inset 0 4px 1px $brand-danger-hue;\n  }\n\n  &[disabled]:hover {\n    background-color: $brand-danger;\n  }\n}\n\n@mixin t-bg() {\n  @include transition(background, 0.25s, $bezie-1);\n}\n\n@mixin t-width() {\n  @include transition(width, 0.25s, $bezie-1);\n}\n\n@mixin t-bg-color() {\n  @include transition(background, color, 0.25s, $bezie-1);\n}\n\n@mixin t-bg-width() {\n  @include transition(background, width, 0.25s, $bezie-1);\n}\n\n@mixin t($property) {\n  @include transition($property, 0.25s, $bezie-2);\n}\n","$support-min-width: 320px;\n\n$breakpoints: (\n  'xs': (max-width: $support-min-width),\n  'sm': (max-width: 768px),\n  'md': (max-width: 992px),\n  'lg': (max-width: 1200px)\n);\n\n@mixin media($breakpoint) {\n  @if map-has-key($breakpoints, $breakpoint) {\n    @media #{inspect(map-get($breakpoints, $breakpoint))} {\n      @content;\n    }\n  } @else {\n    @error 'Incorrect `#{$breakpoint}`. ';\n  }\n}\n\n$bezie-1: cubic-bezier(0.4, 1, 0.3, 1);\n$bezie-2: cubic-bezier(0,.42,.4,1.21);\n\n$font-family-sans-serif:  'Raleway', sans-serif !default;\n$font-family-serif:       'Roboto', sans-serif !default;\n\n\n$brand-default:           #ffffff;\n$brand-default-hue:       #d8d8d8;\n$brand-primary:           #7266ba;\n$brand-primary-hue:       #585b9c;\n$brand-success:           #46be8a;\n$brand-success-hue: \t  #41b181;\n$brand-info:              #39bee8;\n$brand-info-hue:          #34aed4;\n$brand-warning:           #f2a654;\n$brand-warning-hue:       #e39c4f;\n$brand-danger:            #ff69b4;\n$brand-danger-hue:        #e25da0;\n\n$text-light:      \t\t  #ffffff;\n$text-dark:      \t\t  #333333;\n\n$grid-padding: \t\t\t  20px;\n","@import \"shared\";\n\n// CSS Transitions\n// Currently only works in Webkit.\n//\n// * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3\n// * We'll be prepared.\n//\n// Including this submodule sets following defaults for the mixins:\n//\n//     $default-transition-property : all\n//     $default-transition-duration : 1s\n//     $default-transition-function : false\n//     $default-transition-delay    : false\n//\n// Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s).\n\n$default-transition-property: all !default;\n\n$default-transition-duration: 1s !default;\n\n$default-transition-function: false !default;\n\n$default-transition-delay: false !default;\n\n$transitionable-prefixed-values: transform, transform-origin !default;\n\n// One or more properties to transition\n//\n// * for multiple, use a comma-delimited list\n// * also accepts \"all\" or \"none\"\n\n@mixin transition-property($property-1: $default-transition-property,\n  $property-2 : false,\n  $property-3 : false,\n  $property-4 : false,\n  $property-5 : false,\n  $property-6 : false,\n  $property-7 : false,\n  $property-8 : false,\n  $property-9 : false,\n  $property-10: false\n) {\n  @if type-of($property-1) == string { $property-1: unquote($property-1); }\n  $properties: compact($property-1, $property-2, $property-3, $property-4, $property-5, $property-6, $property-7, $property-8, $property-9, $property-10);\n  @if $experimental-support-for-webkit    {       -webkit-transition-property : prefixed-for-transition(-webkit, $properties); }\n  @if $experimental-support-for-mozilla   {          -moz-transition-property : prefixed-for-transition(-moz,    $properties); }\n  @if $experimental-support-for-opera     {            -o-transition-property : prefixed-for-transition(-o,      $properties); }\n                                                          transition-property : $properties;\n}\n\n// One or more durations in seconds\n//\n// * for multiple, use a comma-delimited list\n// * these durations will affect the properties in the same list position\n\n@mixin transition-duration($duration-1: $default-transition-duration,\n  $duration-2 : false,\n  $duration-3 : false,\n  $duration-4 : false,\n  $duration-5 : false,\n  $duration-6 : false,\n  $duration-7 : false,\n  $duration-8 : false,\n  $duration-9 : false,\n  $duration-10: false\n) {\n  @if type-of($duration-1) == string { $duration-1: unquote($duration-1); }\n  $durations: compact($duration-1, $duration-2, $duration-3, $duration-4, $duration-5, $duration-6, $duration-7, $duration-8, $duration-9, $duration-10);\n  @include experimental(transition-duration, $durations,\n    -moz, -webkit, -o, not(-ms), not(-khtml), official\n  );\n}\n\n// One or more timing functions\n//\n// * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]\n// * For multiple, use a comma-delimited list\n// * These functions will effect the properties in the same list position\n\n@mixin transition-timing-function($function-1: $default-transition-function,\n  $function-2 : false,\n  $function-3 : false,\n  $function-4 : false,\n  $function-5 : false,\n  $function-6 : false,\n  $function-7 : false,\n  $function-8 : false,\n  $function-9 : false,\n  $function-10: false\n) {\n  $function-1: unquote($function-1);\n  $functions: compact($function-1, $function-2, $function-3, $function-4, $function-5, $function-6, $function-7, $function-8, $function-9, $function-10);\n  @include experimental(transition-timing-function, $functions,\n    -moz, -webkit, -o, not(-ms), not(-khtml), official\n  );\n}\n\n// One or more transition-delays in seconds\n//\n// * for multiple, use a comma-delimited list\n// * these delays will effect the properties in the same list position\n\n@mixin transition-delay($delay-1: $default-transition-delay,\n  $delay-2 : false,\n  $delay-3 : false,\n  $delay-4 : false,\n  $delay-5 : false,\n  $delay-6 : false,\n  $delay-7 : false,\n  $delay-8 : false,\n  $delay-9 : false,\n  $delay-10: false\n) {\n  @if type-of($delay-1) == string { $delay-1: unquote($delay-1); }\n  $delays: compact($delay-1, $delay-2, $delay-3, $delay-4, $delay-5, $delay-6, $delay-7, $delay-8, $delay-9, $delay-10);\n  @include experimental(transition-delay, $delays,\n    -moz, -webkit, -o, not(-ms), not(-khtml), official\n  );\n}\n\n// Transition all-in-one shorthand\n\n@mixin single-transition(\n  $property: $default-transition-property,\n  $duration: $default-transition-duration,\n  $function: $default-transition-function,\n  $delay: $default-transition-delay\n) {\n  @include transition(compact($property $duration $function $delay));\n}\n\n@mixin transition(\n  $transition-1 : default,\n  $transition-2 : false,\n  $transition-3 : false,\n  $transition-4 : false,\n  $transition-5 : false,\n  $transition-6 : false,\n  $transition-7 : false,\n  $transition-8 : false,\n  $transition-9 : false,\n  $transition-10: false\n) {\n  @if $transition-1 == default {\n    $transition-1 : compact($default-transition-property $default-transition-duration $default-transition-function $default-transition-delay);\n  }\n  $transitions: false;\n  @if type-of($transition-1) == list and type-of(nth($transition-1,1)) == list {\n    $transitions: join($transition-1, compact($transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10), comma);\n  } @else {\n    $transitions : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);\n  }\n  $delays: comma-list();\n  $has-delays: false;\n  $webkit-value: comma-list();\n  $moz-value: comma-list();\n  $o-value: comma-list();\n\n  // This block can be made considerably simpler at the point in time that\n  // we no longer need to deal with the differences in how delays are treated.\n  @each $transition in $transitions {\n    // Extract the values from the list\n    // (this would be cleaner if nth took a 3rd argument to provide a default value).\n    $property: nth($transition, 1);\n    $duration: false;\n    $timing-function: false;\n    $delay: false;\n    @if length($transition) > 1 { $duration:        nth($transition, 2); }\n    @if length($transition) > 2 { $timing-function: nth($transition, 3); }\n    @if length($transition) > 3 { $delay:           nth($transition, 4); $has-delays: true; }\n\n    // If a delay is provided without a timing function\n    @if is-time($timing-function) and not($delay) { $delay: $timing-function; $timing-function: false; $has-delays: true; }\n\n    // Keep a list of delays in case one is specified\n    $delays: append($delays, if($delay, $delay, 0s));\n\n    $webkit-value: append($webkit-value, compact(prefixed-for-transition(-webkit, $property) $duration $timing-function));\n       $moz-value: append(   $moz-value, compact(prefixed-for-transition(   -moz, $property) $duration $timing-function $delay));\n         $o-value: append(     $o-value, compact(prefixed-for-transition(     -o, $property) $duration $timing-function $delay));\n  }\n\n  @if $experimental-support-for-webkit    {       -webkit-transition : $webkit-value;\n    // old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it.\n    @if $has-delays                       { -webkit-transition-delay : $delays;       } }\n  @if $experimental-support-for-mozilla   {          -moz-transition : $moz-value;    }\n  @if $experimental-support-for-opera     {            -o-transition : $o-value;      }\n                                                          transition : $transitions;\n}\n\n// coerce a list to be comma delimited or make a new, empty comma delimited list.\n@function comma-list($list: ()) {\n  @return join((), $list, comma);\n}\n\n// Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`.\n@function prefixed-for-transition($prefix, $property) {\n  @if type-of($property) == list {\n    $new-list: comma-list();\n    @each $v in $property {\n      $new-list: append($new-list, prefixed-for-transition($prefix, $v));\n    }\n    @return $new-list;\n  } @else {\n    @if index($transitionable-prefixed-values, $property) {\n      @return #{$prefix}-#{$property};\n    } @else {\n      @return $property;\n    }\n  }\n}\n\n// Checks if the value given is a unit of time.\n@function is-time($value) {\n  @if type-of($value) == number {\n    @return not(not(index(s ms, unit($value))));\n  } @else {\n    @return false;\n  }\n}\n","@import \"../support\";\n\n// This mixin provides basic support for CSS3 properties and\n// their corresponding experimental CSS2 properties when\n// the implementations are identical except for the property\n// prefix.\n@mixin experimental($property, $value,\n  $moz      : $experimental-support-for-mozilla,\n  $webkit   : $experimental-support-for-webkit,\n  $o        : $experimental-support-for-opera,\n  $ms       : $experimental-support-for-microsoft,\n  $khtml    : $experimental-support-for-khtml,\n  $official : true\n) {\n  @if $webkit  and $experimental-support-for-webkit    { -webkit-#{$property} : $value; }\n  @if $khtml   and $experimental-support-for-khtml     {  -khtml-#{$property} : $value; }\n  @if $moz     and $experimental-support-for-mozilla   {    -moz-#{$property} : $value; }\n  @if $ms      and $experimental-support-for-microsoft {     -ms-#{$property} : $value; }\n  @if $o       and $experimental-support-for-opera     {      -o-#{$property} : $value; }\n  @if $official                                        {         #{$property} : $value; }\n}\n\n// Same as experimental(), but for cases when the property is the same and the value is vendorized\n@mixin experimental-value($property, $value,\n  $moz      : $experimental-support-for-mozilla,\n  $webkit   : $experimental-support-for-webkit,\n  $o        : $experimental-support-for-opera,\n  $ms       : $experimental-support-for-microsoft,\n  $khtml    : $experimental-support-for-khtml,\n  $official : true\n) {\n  @if $webkit  and $experimental-support-for-webkit    { #{$property} : -webkit-#{$value}; }\n  @if $khtml   and $experimental-support-for-khtml     { #{$property} :  -khtml-#{$value}; }\n  @if $moz     and $experimental-support-for-mozilla   { #{$property} :    -moz-#{$value}; }\n  @if $ms      and $experimental-support-for-microsoft { #{$property} :     -ms-#{$value}; }\n  @if $o       and $experimental-support-for-opera     { #{$property} :      -o-#{$value}; }\n  @if $official                                        { #{$property} :         #{$value}; }\n}\n"],"sourceRoot":"/source/"}